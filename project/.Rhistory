sort(table(ld_al$CouncilArea))
ld_al=ld_al %>%
mutate(ca_1=as.numeric(CouncilArea %in% c("Brimbank","Hobsons Bay","Bayside","Melbourne","Banyule",
"Port Phillip","Yarra","Maribyrnong")),
ca_2=as.numeric(CouncilArea %in% c("Stonnington","Glen Eira","Darebin","Moonee Valley",
"Moreland","Boroondara",""))) %>%
select(-CouncilArea)
glimpse(ld_al)
#sort(table(ld_al$Address))
ld_al$Address=NULL
glimpse(ld_al)
ld_train= ld_al %>% filter(data== "train") %>% select(-data)
ld_test= ld_al %>% filter(data=="test") %>% select(-data,-Price)
set.seed(2)
library(caTools)
s= sample.split(ld_al,SplitRatio = 0.7)
train1=ld_train[s,]
train2=ld_train[-s,]
fit=lm(Price~.-Landsize,data = train1)
library(car)
vif(fit)
setwd("C:\\Users\\30jag\\edvancer classes\\project")
train=read.csv("housing_train.csv",stringsAsFactors = F)
test=read.csv("housing_test.csv",stringsAsFactors = F)
View(train)
View(test)
test$Price=NA
train$data="train"
test$data="test"
ld_al=rbind(train,test)
View(ld_al)
sort(table(ld_al$Suburb))
library(dplyr)
glimpse(ld_al)
sort(table(ld_al$Rooms))
creatdummies=function(data,var,freq_cutoff=0)
{
t=table(data[,var])
t=t[t>freq_cutoff]
t=sort(t)
categorise=names(t)[-1]
for (cat in categorise) {
name=paste(var,cat,sep="-")
name=gsub(" ","",name)
name=gsub("-","_",name)
name=gsub("\\?","Q",name)
name=gsub("<","LT_",name)
name=gsub("\\+","",name)
data[,name]=as.numeric(data[,var]==cat)
}
data[,var]=NULL
return(data)
}
glimpse(ld_al)
lapply(ld_al,function(x) sum(is.na(x)))
for (col in names(ld_al)) {
if(sum(is.na(ld_al[,col]))>0 & !(col %in% c("data","Price"))){
ld_al[is.na(ld_al[,col]),col]=round(mean(ld_al[ld_al$data=="train",col],na.rm = T))
}
}
View(ld_al)
sort(table(ld_al$Suburb))
ld_al= ld_al %>%
mutate(Suburb_100_200= as.numeric(Suburb %in% c( "Newport","Doncaster","Ascot Vale","Footscray","Moonee Ponds",
"Thornbury","Hampton","Yarraville","Balwyn","Malvern East",
"Camberwell","Carnegie","Port Melbourne","Bentleigh","Pascoe Vale",
"Brighton East","Hawthorn","Balwyn North","Coburg","Northcote",
"Kew","Brighton","Glenroy","Glen Iris","Essendon","Brunswick",
"South Yarra","St Kilda","Preston")),
Suburb_200_400=as.numeric(Suburb %in% c("Richmond","Bentleigh East","Reservoir")))
sort(table(ld_al$Rooms))
ld_al=creatdummies(ld_al,"Rooms",1000)
sort(table(ld_al$Type))
ld_al=creatdummies(ld_al,"Type",1000)
sort(table(ld_al$Method))
ld_al=creatdummies(ld_al,"Method",1000)
glimpse(ld_al)
sort(table(ld_al$SellerG))
ld_al= ld_al %>%
mutate( SellerG_100_700=as.numeric(SellerG %in% c("Woodards","Brad","Biggin","Ray","Buxton","Marshall","Barry",
"Stockdale","Kay","Hodges","McGrath","Noel","Gary","Jas",
"Miles","Greg","Sweeney","RT","Fletchers")),
seller_800_2000=as.numeric(SellerG %in% c("hockingstuart","Jellis","Nelson"))) %>%
select(-SellerG)
sort(table(ld_al$Distance))
ld_al=ld_al %>%
mutate(Distance_100_500= as.numeric(Distance %in% c("8.7","8.4" ,"6.5","6.9","12.1","7","13.7","7.7",
"3.8", "10.5","9.9","10.7","7.5","6.4","5.5","13.5",
"5.6","4.5","5.2","11.8","6.1","13.8","9.7", "11.4",
"8.8","5.9","3.3","4.6","8","2.6","7.8","13","13.9",
"9.2")),
Distance_700=as.numeric(Distance== "11.2")) %>%
select(-Distance)
glimpse(ld_al)
sort(table(ld_al$Postcode))
lapply(ld_al,function(x) sum(is.na(x)))
sort(table(ld_al$Bedroom2))
ld_al=creatdummies(ld_al,"Bedroom2",1000)
glimpse(ld_al)
sort(table(ld_al$Bathroom))
ld_al=creatdummies(ld_al,"Bathroom",400)
glimpse(ld_al)
sort(table(ld_al$Car))
ld_al=creatdummies(ld_al,"Car",500)
glimpse(ld_al)
sort(table(ld_al$BuildingArea))
ld_al=ld_al %>%
mutate(BuildingArea_1= as.numeric(BuildingArea %in% c(193,198,201,212,260,275,46,53,149,
166,225,250,55,59,162,67,171,173,
174,192,220,2,44,184,195,204,215,
3,45,56,57,156,175,181,196,207,51,
61,64,67,155,172,200,63,154,163,164,
176,185,190,52,66,91,99,124,146,151,
128,137,144,147,148,152,158,159,82,
117,136,50,69,73,168,71,89,123,142,
78,87,101,113,119,122,143,153,170,
60,74,79,81,127,139,141,84,86,93,
121,129,134,165,62,76,77,96,132,103
,114,126,131,133,72,108,116,88,94,
98,68,111,138,83,97,109,112,145,95,
180,75,118,135,102,125,105,106)),
BuildingArea_2=as.numeric(BuildingArea %in% c(65,104,140,160,107,90,80,150,115,92,
70,85,110,130,100,120))) %>% select(-BuildingArea)
glimpse(ld_al)
sort(table(ld_al$YearBuilt))
ld_al=creatdummies(ld_al,"YearBuilt",400)
glimpse(ld_al)
sort(table(ld_al$CouncilArea))
ld_al=ld_al %>%
mutate(ca_1=as.numeric(CouncilArea %in% c("Brimbank","Hobsons Bay","Bayside","Melbourne","Banyule",
"Port Phillip","Yarra","Maribyrnong")),
ca_2=as.numeric(CouncilArea %in% c("Stonnington","Glen Eira","Darebin","Moonee Valley",
"Moreland","Boroondara",""))) %>%
select(-CouncilArea)
glimpse(ld_al)
#sort(table(ld_al$Address))
ld_al$Address=NULL
glimpse(ld_al)
ld_train= ld_al %>% filter(data== "train") %>% select(-data)
ld_test= ld_al %>% filter(data=="test") %>% select(-data,-Price)
set.seed(2)
library(caTools)
s= sample.split(ld_al,SplitRatio = 0.7)
train1=ld_train[s,]
train2=ld_train[-s,]
fit=lm(Price~.-Landsize-Postcode,data = train1)
library(car)
vif(fit)
setwd("C:\\Users\\30jag\\edvancer classes\\project")
train=read.csv("housing_train.csv",stringsAsFactors = F)
test=read.csv("housing_test.csv",stringsAsFactors = F)
View(train)
View(test)
test$Price=NA
train$data="train"
test$data="test"
ld_al=rbind(train,test)
View(ld_al)
sort(table(ld_al$Suburb))
library(dplyr)
glimpse(ld_al)
sort(table(ld_al$Rooms))
creatdummies=function(data,var,freq_cutoff=0)
{
t=table(data[,var])
t=t[t>freq_cutoff]
t=sort(t)
categorise=names(t)[-1]
for (cat in categorise) {
name=paste(var,cat,sep="-")
name=gsub(" ","",name)
name=gsub("-","_",name)
name=gsub("\\?","Q",name)
name=gsub("<","LT_",name)
name=gsub("\\+","",name)
data[,name]=as.numeric(data[,var]==cat)
}
data[,var]=NULL
return(data)
}
glimpse(ld_al)
lapply(ld_al,function(x) sum(is.na(x)))
for (col in names(ld_al)) {
if(sum(is.na(ld_al[,col]))>0 & !(col %in% c("data","Price"))){
ld_al[is.na(ld_al[,col]),col]=round(mean(ld_al[ld_al$data=="train",col],na.rm = T))
}
}
View(ld_al)
sort(table(ld_al$Suburb))
ld_al= ld_al %>%
mutate(Suburb_100_200= as.numeric(Suburb %in% c( "Newport","Doncaster","Ascot Vale","Footscray","Moonee Ponds",
"Thornbury","Hampton","Yarraville","Balwyn","Malvern East",
"Camberwell","Carnegie","Port Melbourne","Bentleigh","Pascoe Vale",
"Brighton East","Hawthorn","Balwyn North","Coburg","Northcote",
"Kew","Brighton","Glenroy","Glen Iris","Essendon","Brunswick",
"South Yarra","St Kilda","Preston")),
Suburb_200_400=as.numeric(Suburb %in% c("Richmond","Bentleigh East","Reservoir")))
sort(table(ld_al$Rooms))
ld_al=creatdummies(ld_al,"Rooms",1000)
sort(table(ld_al$Type))
ld_al=creatdummies(ld_al,"Type",1000)
sort(table(ld_al$Method))
ld_al=creatdummies(ld_al,"Method",1000)
glimpse(ld_al)
sort(table(ld_al$SellerG))
ld_al= ld_al %>%
mutate( SellerG_100_700=as.numeric(SellerG %in% c("Woodards","Brad","Biggin","Ray","Buxton","Marshall","Barry",
"Stockdale","Kay","Hodges","McGrath","Noel","Gary","Jas",
"Miles","Greg","Sweeney","RT","Fletchers")),
seller_800_2000=as.numeric(SellerG %in% c("hockingstuart","Jellis","Nelson"))) %>%
select(-SellerG)
sort(table(ld_al$Distance))
ld_al=ld_al %>%
mutate(Distance_100_500= as.numeric(Distance %in% c("8.7","8.4" ,"6.5","6.9","12.1","7","13.7","7.7",
"3.8", "10.5","9.9","10.7","7.5","6.4","5.5","13.5",
"5.6","4.5","5.2","11.8","6.1","13.8","9.7", "11.4",
"8.8","5.9","3.3","4.6","8","2.6","7.8","13","13.9",
"9.2")),
Distance_700=as.numeric(Distance== "11.2")) %>%
select(-Distance)
glimpse(ld_al)
sort(table(ld_al$Postcode))
lapply(ld_al,function(x) sum(is.na(x)))
sort(table(ld_al$Bedroom2))
ld_al=creatdummies(ld_al,"Bedroom2",1000)
glimpse(ld_al)
sort(table(ld_al$Bathroom))
ld_al=creatdummies(ld_al,"Bathroom",400)
glimpse(ld_al)
sort(table(ld_al$Car))
ld_al=creatdummies(ld_al,"Car",500)
glimpse(ld_al)
sort(table(ld_al$YearBuilt))
ld_al=creatdummies(ld_al,"YearBuilt",400)
glimpse(ld_al)
sort(table(ld_al$CouncilArea))
ld_al=ld_al %>%
mutate(ca_1=as.numeric(CouncilArea %in% c("Brimbank","Hobsons Bay","Bayside","Melbourne","Banyule",
"Port Phillip","Yarra","Maribyrnong")),
ca_2=as.numeric(CouncilArea %in% c("Stonnington","Glen Eira","Darebin","Moonee Valley",
"Moreland","Boroondara",""))) %>%
select(-CouncilArea)
glimpse(ld_al)
#sort(table(ld_al$Address))
ld_al$Address=NULL
glimpse(ld_al)
ld_train= ld_al %>% filter(data== "train") %>% select(-data)
ld_test= ld_al %>% filter(data=="test") %>% select(-data,-Price)
set.seed(2)
library(caTools)
s= sample.split(ld_al,SplitRatio = 0.7)
train1=ld_train[s,]
train2=ld_train[-s,]
fit=lm(Price~.-Landsize-Postcode,data = train1)
library(car)
vif(fit)
setwd("C:\\Users\\30jag\\edvancer classes\\project")
train=read.csv("housing_train.csv",stringsAsFactors = F)
test=read.csv("housing_test.csv",stringsAsFactors = F)
View(train)
View(test)
test$Price=NA
train$data="train"
test$data="test"
ld_al=rbind(train,test)
View(ld_al)
sort(table(ld_al$Suburb))
library(dplyr)
glimpse(ld_al)
sort(table(ld_al$Rooms))
creatdummies=function(data,var,freq_cutoff=0)
{
t=table(data[,var])
t=t[t>freq_cutoff]
t=sort(t)
categorise=names(t)[-1]
for (cat in categorise) {
name=paste(var,cat,sep="-")
name=gsub(" ","",name)
name=gsub("-","_",name)
name=gsub("\\?","Q",name)
name=gsub("<","LT_",name)
name=gsub("\\+","",name)
data[,name]=as.numeric(data[,var]==cat)
}
data[,var]=NULL
return(data)
}
glimpse(ld_al)
lapply(ld_al,function(x) sum(is.na(x)))
for (col in names(ld_al)) {
if(sum(is.na(ld_al[,col]))>0 & !(col %in% c("data","Price"))){
ld_al[is.na(ld_al[,col]),col]=round(mean(ld_al[ld_al$data=="train",col],na.rm = T))
}
}
glimpse(ld_al)
setwd("C:\\Users\\30jag\\edvancer classes\\project")
train=read.csv("housing_train.csv",stringsAsFactors = F)
test=read.csv("housing_test.csv",stringsAsFactors = F)
View(train)
View(test)
test$Price=NA
train$data="train"
test$data="test"
ld_al=rbind(train,test)
View(ld_al)
sort(table(ld_al$Suburb))
library(dplyr)
glimpse(ld_al)
sort(table(ld_al$Rooms))
creatdummies=function(data,var,freq_cutoff=0)
{
t=table(data[,var])
t=t[t>freq_cutoff]
t=sort(t)
categorise=names(t)[-1]
for (cat in categorise) {
name=paste(var,cat,sep="-")
name=gsub(" ","",name)
name=gsub("-","_",name)
name=gsub("\\?","Q",name)
name=gsub("<","LT_",name)
name=gsub("\\+","",name)
data[,name]=as.numeric(data[,var]==cat)
}
data[,var]=NULL
return(data)
}
glimpse(ld_al)
lapply(ld_al,function(x) sum(is.na(x)))
for (col in names(ld_al)) {
if(sum(is.na(ld_al[,col]))>0 & !(col %in% c("data","Price"))){
ld_al[is.na(ld_al[,col]),col]=round(mean(ld_al[ld_al$data=="train",col],na.rm = T))
}
}
View(ld_al)
sort(table(ld_al$Suburb))
ld_al= ld_al %>%
mutate(Suburb_100_200= as.numeric(Suburb %in% c( "Newport","Doncaster","Ascot Vale","Footscray","Moonee Ponds",
"Thornbury","Hampton","Yarraville","Balwyn","Malvern East",
"Camberwell","Carnegie","Port Melbourne","Bentleigh","Pascoe Vale",
"Brighton East","Hawthorn","Balwyn North","Coburg","Northcote",
"Kew","Brighton","Glenroy","Glen Iris","Essendon","Brunswick",
"South Yarra","St Kilda","Preston")),
Suburb_200_400=as.numeric(Suburb %in% c("Richmond","Bentleigh East","Reservoir"))) %>%
select(-Suburb)
sort(table(ld_al$Rooms))
ld_al=creatdummies(ld_al,"Rooms",1000)
sort(table(ld_al$Type))
ld_al=creatdummies(ld_al,"Type",1000)
sort(table(ld_al$Method))
ld_al=creatdummies(ld_al,"Method",1000)
glimpse(ld_al)
sort(table(ld_al$SellerG))
ld_al= ld_al %>%
mutate( SellerG_100_700=as.numeric(SellerG %in% c("Woodards","Brad","Biggin","Ray","Buxton","Marshall","Barry",
"Stockdale","Kay","Hodges","McGrath","Noel","Gary","Jas",
"Miles","Greg","Sweeney","RT","Fletchers")),
seller_800_2000=as.numeric(SellerG %in% c("hockingstuart","Jellis","Nelson"))) %>%
select(-SellerG)
sort(table(ld_al$Distance))
ld_al=ld_al %>%
mutate(Distance_100_500= as.numeric(Distance %in% c("8.7","8.4" ,"6.5","6.9","12.1","7","13.7","7.7",
"3.8", "10.5","9.9","10.7","7.5","6.4","5.5","13.5",
"5.6","4.5","5.2","11.8","6.1","13.8","9.7", "11.4",
"8.8","5.9","3.3","4.6","8","2.6","7.8","13","13.9",
"9.2")),
Distance_700=as.numeric(Distance== "11.2")) %>% select(-Distance)
ld_al= ld_al %>%
mutate(SellerG_100_200=as.numeric(SellerG %in% c("Stockdale","Kay","Hodges","McGrath","Noel","Gary","Jas",
"Jas","Miles","Greg","Sweeney","RT","Fletchers")),
SellerG_200_700=as.numeric(SellerG %in% c("Woodards","Brad","Biggin","Ray","Buxton","Marshall","Barry")),
seller_800_1000=as.numeric(SellerG %in% c("hockingstuart","Jellis")),
seller_Nelson=as.numeric(SellerG == "Nelson")) %>% select(-SellerG)
sort(table(ld_al$Postcode))
ld_al=ld_al %>%
mutate(Postcode_100_200=as.numeric(Postcode %in%  c(3079,3108,3068,3039,3071,3147,3013,
3103,3124,3145,3127,3081,3207,3044,
3187,3122,3031,3104,3181,3015,3042,
3070,3011,3188,3101,3186,3084,3146,
3056,3141,3182,3012,3072,3204,3058,
3163,3040,3032,3121,3165,3046,3020,
3073))) %>% select(-Postcode)
glimpse(ld_al)
lapply(ld_al,function(x) sum(is.na(x)))
sort(table(ld_al$Bedroom2))
ld_al=creatdummies(ld_al,"Bedroom2",1000)
glimpse(ld_al)
sort(table(ld_al$Bathroom))
ld_al=creatdummies(ld_al,"Bathroom",400)
glimpse(ld_al)
sort(table(ld_al$Car))
ld_al=creatdummies(ld_al,"Car",500)
glimpse(ld_al)
sort(table(ld_al$BuildingArea))
ld_al=ld_al %>%
mutate(BuildingArea_1= as.numeric(BuildingArea %in% c(193,198,201,212,260,275,46,53,149,
166,225,250,55,59,162,67,171,173,
174,192,220,2,44,184,195,204,215,
3,45,56,57,156,175,181,196,207,51,
61,64,67,155,172,200,63,154,163,164,
176,185,190,52,66,91,99,124,146,151,
128,137,144,147,148,152,158,159,82,
117,136,50,69,73,168,71,89,123,142,
78,87,101,113,119,122,143,153,170,
60,74,79,81,127,139,141,84,86,93,
121,129,134,165,62,76,77,96,132,103
,114,126,131,133,72,108,116,88,94,
98,68,111,138,83,97,109,112,145,95,
180,75,118,135,102,125,105,106)),
BuildingArea_2=as.numeric(BuildingArea %in% c(65,104,140,160,107,90,80,150,115,92,
70,85,110,130,100,120))) %>% select(-BuildingArea)
sort(table(ld_al$YearBuilt))
ld_al=creatdummies(ld_al,"YearBuilt",400)
glimpse(ld_al)
sort(table(ld_al$CouncilArea))
ld_al=ld_al %>%
mutate(ca_1=as.numeric(CouncilArea %in% c("Brimbank","Hobsons Bay","Bayside","Melbourne","Banyule",
"Port Phillip","Yarra","Maribyrnong")),
ca_2=as.numeric(CouncilArea %in% c("Stonnington","Glen Eira","Darebin","Moonee Valley",
"Moreland","Boroondara",""))) %>% select(-CouncilArea)
glimpse(ld_al)
#sort(table(ld_al$Address))
ld_al$Address=NULL
glimpse(ld_al)
ld_train= ld_al %>% filter(data== "train") %>% select(-data)
ld_test= ld_al %>% filter(data=="test") %>% select(-data,-Price)
set.seed(2)
library(caTools)
s= sample.split(ld_al,SplitRatio = 0.7)
train1=ld_train[s,]
train2=ld_train[-s,]
fit=lm(Price~.-Landsize-Postcode,data = train1)
library(car)
vif(fit)
ld_train= ld_al %>% filter(data== "train") %>% select(-data)
ld_test= ld_al %>% filter(data=="test") %>% select(-data,-Price)
set.seed(2)
library(caTools)
s= sample.split(ld_al,SplitRatio = 0.7)
train1=ld_train[s,]
train2=ld_train[-s,]
fit=lm(Price~.-Landsize,data = train1)
library(car)
vif(fit)
sort(vif(fit),decreasing = T)
summary(fit)
fit=lm(Price~.-Landsize-Suburb_200_400,data = train1)
summary(fit)
fit=lm(Price~.-Landsize-Suburb_200_400-Method_PI,data = train1)
summary(fit)
fit=step(fit)
summary(fit)
prediction=predict(fit,newdata = train2)
errors=train2$Price-prediction
errors**2 %>% mean() %>% sqrt()
final_fit=fit=lm(Price~.--Landsize-Distance-Postcode,data = ld_train)
final_fit=step(final_fit)
summary(final_fit)
final_fit=fit=lm(Price~.-Landsize,data = ld_train)
final_fit=step(final_fit)
summary(final_fit)
test.pred=predict(final_fit,newdata = ld_test)
test.pred
write.csv(test.pred,"submision1.csv",row.names = F)
error=train2$Price-test.pred
var(ld_al$Price)
var(ld_train$Price)
setwd("C:\\Users\\30jag\\edvancer classes\\project")
train=read.csv("housing_train.csv",stringsAsFactors = F)
test=read.csv("housing_test.csv",stringsAsFactors = F)
View(train)
View(test)
test$Price=NA
train$data="train"
test$data="test"
ld_al=rbind(train,test)
View(ld_al)
sort(table(ld_al$Suburb))
library(dplyr)
glimpse(ld_al)
sort(table(ld_al$YearBuilt))
lapply(ld_al, function(x) sum(is.na(x)))
sort(table(ld_al$Type))
creatdummies=function(data,var,freq_cutoff=0)
{
t=table(data[,var])
t=t[t>freq_cutoff]
t=sort(t)
categorise=names(t)[-1]
for (cat in categorise) {
name=paste(var,cat,sep="-")
name=gsub(" ","",name)
name=gsub("-","_",name)
name=gsub("\\?","Q",name)
name=gsub("<","LT_",name)
name=gsub("\\+","",name)
data[,name]=as.numeric(data[,var]==cat)
}
data[,var]=NULL
return(data)
}
sort(table(ld_al$Type))
tapply(ld_al$Price,ld_al$Type,mean,na.rm=T)
sort(table(ld_al$Postcode))
plot(ld_al$Distance)
sort(table(ld_al$CouncilArea))
tapply(ld_al$Price,ld_al$CouncilArea,mean,na.rm=T)
max(tapply(ld_al$Price,ld_al$CouncilArea,mean,na.rm=T))
var(tapply(ld_al$Price,ld_al$CouncilArea,mean,na.rm=T))
max(var(tapply(ld_al$Price,ld_al$CouncilArea,mean,na.rm=T)))
sort(table(ld_al$Address))
